import json
from enum import auto, Enum
from typing import List
import pandas as pd
import numpy as np
from main_classificator import ct

from main_classificator.ct import ASM_EXT, BYTES_EXT


class Extention(Enum):
    ASM = auto()
    BYTES = auto()


def get_ext_str_by_enum(ext: Extention) -> str:
    return ASM_EXT if ext == Extention.ASM else BYTES_EXT


def get_file_name_by_extention(file_names: List[str], ext: Extention):
    ext_str = get_ext_str_by_enum(ext)
    return [file for file in file_names if file.endswith(ext_str)]


def format_batches(path_to_file: str):
    def reformat_prediction_column(row: pd.Series):
        prediction = json.loads(row[ct.PREDICTION_COLUMN])
        for num, pred_col in enumerate(ct.ALL_PREDICTION_COLUMNS):
            row[pred_col] = prediction[num]
        return row
    df = pd.read_csv(path_to_file)
    start_len = len(df)

    df = df.apply(reformat_prediction_column, axis=1)
    df[ct.ID_COLUMN] = df[ct.ID_COLUMN].apply(lambda x: x.replace(ct.BYTES_EXT, ''))
    df = df[ct.RESULT_COLUMNS]

    result_len = len(df)
    assert start_len == result_len

    df.to_csv(path_to_file, index=False)


def replace_ext(path_to_file):
    df = pd.read_csv(path_to_file)
    start_len = len(df)

    df[ct.ID_COLUMN] = df[ct.ID_COLUMN].apply(lambda x: x.replace(ct.BYTES_EXT, ''))
    df = df[ct.RESULT_COLUMNS]

    result_len = len(df)
    assert start_len == result_len

    df.to_csv(path_to_file, index=False)


if __name__ == '__main__':
    format_batches('/media/max/hdd_part/Downloads/kaggle/malware-classification/predictions/prediction_1557313961.csv')