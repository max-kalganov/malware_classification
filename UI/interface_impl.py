from tkinter import *
from tkinter import filedialog
from tkinter import ttk
from typing import Tuple

from ttkthemes import themed_tk as tk
from UI import ct


class GUI:
    def __init__(self, master):
        self.full_path_to_file = None

        self.master = master

        # set master configurations
        self.master.geometry("%dx%d+0+0" % (ct.WIDTH, ct.HEIGHT))
        self.master.configure(background=ct.BG_MAIN)

        self.master.title("Virus Detector")

        self.frame = Frame(master, bg=ct.BG_MAIN)
        self.frame.place(relx=0.25, rely=0.1, relwidth=0.5, relheight=0.8)

        self.label = Label(self.frame, text="Neural Net Virus Detector", font=40, bg=ct.BG_MAIN_LABEL, foreground=ct.BG_MAIN)
        self.label.place(relx=0, rely=0, relwidth=1, relheight=0.2)

        self.file_path = StringVar(value='no file selected...')

        self.file_name = Label(self.frame, textvariable=self.file_path, bg=ct.BG_CHN_FILE_LBL, borderwidth=1, relief="groove")
        self.file_name.place(relx=0, rely=0.35, relwidth=1, relheight=0.1)

        self.greet_button = Button(self.frame, text="Choose a file to check", bg=ct.BG_CH_FILE_BTN, command=self.browse_file)
        self.greet_button.place(relx=0, rely=0.5, relwidth=1, relheight=0.2)

        self.classif_button = Button(self.frame, text="Classify file", bg=ct.BG_CLASSIF_BTN, command=self.classify_file)
        self.classif_button.place(relx=0, rely=0.7, relwidth=1, relheight=0.2)

    def classif(self) -> Tuple[str, bool]:
        res_str = '97%'
        res_bool = False
        if self.full_path_to_file[-5:] == 'v.exe':
            res_bool = True
        return res_str, res_bool

    def ready_to_classify(self) -> bool:
        return self.full_path_to_file is not None

    def classify_file(self):
        if not self.ready_to_classify():
            self.file_path.set('no file selected...')
        else:
            print("Classifying...")
            classif_percent, classif_res = self.classif()
            results_window = Toplevel(root)
            results_window.geometry("%dx%d+0+0" % (ct.RES_WNDW_WIDTH, ct.RES_WNDW_HEIGHT))
            common_bg = ct.BG_RES_GOOD if classif_res else ct.BG_RES_BAD
            results_window.configure(background=common_bg)

            predict_percent = StringVar(value=classif_percent)

            percent = Label(results_window, textvariable=predict_percent, font='Helvetica 38 bold', bg=common_bg, foreground='white')
            percent.place(relx=0, rely=0.25, relwidth=1, relheight=0.3)

            res_text = Label(results_window, text=f"the file is {'not ' if classif_res else ''}a VIRUS",
                             font=40, foreground='white', bg=common_bg)
            res_text.place(relx=0, rely=0.55, relwidth=1, relheight=0.1)

    def check_input_file(self, file_name: str) -> bool:
        return file_name[-4:] == '.exe'

    def browse_file(self):
        # Allow user to select a directory and store it in global var
        # called folder_path
        filename = filedialog.askopenfilename()
        if not self.check_input_file(filename):
            filename = 'not .exe file has been chosen!'
        else:
            self.full_path_to_file = filename
            filename = filename.split('/')[-1]
        self.file_path.set(filename)
        print(filename)


if __name__ == '__main__':
    root = tk.ThemedTk()
    root.get_themes()
    root.set_theme("smog")

    my_gui = GUI(root)
    root.mainloop()
